{"version":3,"sources":["components/PageTitle/index.js","components/DateNews/index.js","components/NewsItem/index.js","components/Loader/index.js","components/NewsBlock/index.js","components/Contacts/index.js","components/MainPage/index.js","components/NewsDetail/index.js","App.js","serviceWorker.js","components/Footer/index.js","components/Header/index.js","index.js"],"names":["PageTitle","props","splitedTitle","title","split","titleFirst","titleStart","slice","length","join","titleEnd","className","DateNews","addZero","number","date","Date","parse","time","dateObj","month","getMonth","day","getDate","NewsItem","to","item","description","href","url","target","source","name","publishedAt","Loader","src","NewsBlock","content","map","key","Contacts","MainPage","handleCurrentNews","withRouter","path","location","pathname","urlTitle","currentNews","news","find","urlToImage","App","useState","setNews","newsMain","filter","index","useEffect","fetch","then","response","json","formattedActicles","articles","ac","replace","exact","component","Boolean","window","hostname","match","Footer","Header","activeClassName","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ee3d16b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageTitle = props => {\r\n    const splitedTitle = props.title.split(' ');\r\n    const titleFirst = splitedTitle[0];\r\n    const titleStart = splitedTitle.slice(1, splitedTitle.length - 1).join(' ');\r\n    const titleEnd = splitedTitle[splitedTitle.length - 1];\r\n    return(\r\n        <h1 className=\"title\">\r\n            <span className=\"title__start\">{titleFirst} </span>\r\n            {titleStart} <span>{titleEnd}</span>  \r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","import React from 'react';\r\n\r\nconst DateNews = props => {\r\n\r\n    const  addZero = number => {\r\n        return number < 10 ? '0' + number : number;\r\n    }\r\n\r\n    const date = Date.parse(props.time);\r\n    const dateObj = new Date(date);\r\n    const month = addZero(dateObj.getMonth() + 1);\r\n    const day = addZero(dateObj.getDate());\r\n\r\n    return(\r\n        <div className=\"news__date\">\r\n                    <span>{day}</span>/<span>{month}</span>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default DateNews;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DateNews from '../DateNews';\r\n\r\nconst NewsItem = props => { \r\n\r\n    return(\r\n        <div className=\"news__item\">\r\n            <h4 className=\"news__title\">\r\n                <NavLink to={`/news/${props.item.title}`} >\r\n                    {props.item.description || props.item.title}\r\n                </NavLink>\r\n            </h4>\r\n            <div className=\"news__footer\">\r\n                <a href={props.item.url} className=\"news__source\" target=\"_blank\">\r\n                    {props.item.source.name}\r\n                </a>\r\n                <DateNews\r\n                time = {props.item.publishedAt}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsItem;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"news__loader\">\r\n           <img src=\"https://airport.by/images/loader.gif\"/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport  PageTitle  from '../PageTitle/index';\r\nimport NewsItem from '../NewsItem';\r\nimport Loader from '../Loader';\r\n\r\n\r\n\r\nconst NewsBlock = props => {\r\n    return props.content.length ? (\r\n        <div className='news__block'>\r\n            <PageTitle\r\n                title={props.title}\r\n            />\r\n            <div className=\"news__items\">\r\n            {props.content.map(item => {\r\n                return(\r\n                    <NewsItem\r\n                    key = {item.title}\r\n                    item={item}\r\n                    />  \r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    ) : <Loader/>\r\n}\r\n\r\nexport default NewsBlock;","import React from 'react';\r\n\r\nconst Contacts = () => {\r\n    return(\r\n        <div className=\"contacts__block\">\r\n            <div className=\"contacts__info\">\r\n               <a href='tel:79276983443' className=\"title\">\r\n                    <span>+7 (927) 698 34 43</span>\r\n                </a>\r\n                <h4 className=\"news__title\">\r\n                    <a href=\"https://t.me/ketrinkash\" target=\"_blank\">\r\n                        Кашлева \r\n                        <span>\r\n                            Екатерина\r\n                        </span>\r\n                    </a>\r\n                </h4>\r\n                <a href=\"mailto:kashleva2009@yandex.ru\" className=\"contacts__link\">\r\n                    kashleva2009@yandex.ru\r\n                </a>\r\n                <div className=\"contacts__footer\">\r\n                <p>\r\n                    JavaScript разработчик\r\n                </p>\r\n                <p>\r\n                    ES5, ES6, <a href=\"https://ru.reactjs.org/\" target=\"_blank\">React</a>\r\n                </p>\r\n                </div>\r\n            </div>\r\n            <img src=\"https://sun9-17.userapi.com/c855432/v855432730/146765/0rBTXO8PjEo.jpg\" className=\"contacts__img\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport NewsBlock from '../NewsBlock';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MainPage = props =>{\r\n    return(\r\n        <div className=\"main__block\">\r\n            <NewsBlock\r\n            title={props.title}\r\n            content= {props.content}\r\n            handleCurrentNews={props.handleCurrentNews}\r\n            />\r\n            <NavLink to='/news' \r\n            className=\"main__link\">\r\n                 Быть в курсе событий\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport PageTitle from '../PageTitle';\r\nimport DateNews from '../DateNews';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\n\r\nconst NewsDetail = props => {\r\n    const path = props.location.pathname.split(\"/\");\r\n    const urlTitle = path[path.length - 1];\r\n    const currentNews = props.news && props.news.find(news => news.title === urlTitle);\r\n    return currentNews ? (\r\n        <div className=\"news__detail\">\r\n            <div className=\"news__info\">\r\n            <PageTitle\r\n            title={currentNews.title}\r\n            />\r\n            <a href={currentNews.url} className=\"news__source\" target=\"_blank\">\r\n                    {currentNews.source.name}\r\n                </a>\r\n                <DateNews\r\n                time = {currentNews.publishedAt}\r\n                />\r\n            </div>\r\n            <div className=\"news__content\">\r\n                <img src={currentNews.urlToImage} className=\"news__img\"/>\r\n                <p>\r\n                    {currentNews.content}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    ) : <Loader/>\r\n}\r\n\r\nexport default withRouter (NewsDetail);","import React, { useState, useEffect } from 'react';\r\nimport {Route, NavLink} from 'react-router-dom';\r\nimport NewsBlock from './components/NewsBlock/index';\r\nimport Contacts from './components/Contacts';\r\nimport MainPage from './components/MainPage';\r\nimport NewsDetail from './components/NewsDetail';\r\n\r\nconst  App=() => {\r\n\r\n  const [news, setNews] = useState([]);\r\n\r\n\r\n  const newsMain = news.filter((item, index) => {\r\n    return index < 6 ?  item : null\r\n  })\r\n\r\n  const url = 'https://newsapi.org/v2/top-headlines?' + 'country=us&' + 'apiKey=9babfe25f9334478ab5fa17bf649ffef';\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n    .then(function(response) {\r\n        return response.json();\r\n    }).then((response) =>{\r\n      const formattedActicles = response.articles.map(ac =>({ ...ac, title: ac.title.replace(/%/gi, 'percent')}));\r\n      setNews(formattedActicles);\r\n    })\r\n  },[url])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Route\r\n        path='/'\r\n        exact\r\n        component={()=><MainPage\r\n          title='Всегда\r\n          свежие новости'\r\n          content={newsMain}\r\n        />}\r\n        />\r\n        <Route\r\n        path='/news'\r\n        exact\r\n        component={()=><NewsBlock\r\n          title=\"Быть \r\n          в курсе событий\"\r\n          content={news}\r\n        />}\r\n        />\r\n        <Route\r\n        path='/contacts'\r\n        exact\r\n        component={Contacts}\r\n        />\r\n        <Route\r\n        path='/news/:id'\r\n        exact\r\n        component={()=><NewsDetail\r\n        news = {news}\r\n        />}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <NavLink\r\n            to=\"/\"\r\n            className=\"logo\"\r\n             >\r\n                Новостник\r\n                <span>\r\n                    Single Page Application\r\n                </span>\r\n            </NavLink>\r\n            <p>\r\n                Дипломный проект\r\n            </p>\r\n            <p className=\"logo\">\r\n                <span className=\"text-right\">\r\n                    Made by\r\n                </span>\r\n                Катерина Кашлева\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className=\"header\">\r\n            <NavLink\r\n            to=\"/\"\r\n            className=\"logo\"\r\n             >\r\n                Новостник\r\n            </NavLink>\r\n            <ul className='menu'>\r\n                <li className=\"menu__item\">\r\n                <NavLink \r\n                to=\"/\"\r\n                exact\r\n                className=\"menu__link\"\r\n                activeClassName={'menu__link_active'}\r\n                >\r\n                    Главная\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"menu__item\">\r\n                <NavLink \r\n                to=\"/news\"\r\n                className=\"menu__link\"\r\n                activeClassName={'menu__link_active'}\r\n                >\r\n                    Новости\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"menu__item\">\r\n                <NavLink \r\n                to=\"/contacts\"\r\n                className=\"menu__link\"\r\n                activeClassName={'menu__link_active'}\r\n                >\r\n                    Контакты\r\n                </NavLink>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './style/font/stylesheet.css';\r\nimport './style/main.scss';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <div className=\"container\">\r\n  <Header/>\r\n    <App />\r\n    <Footer/>\r\n  </div>\r\n    \r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}